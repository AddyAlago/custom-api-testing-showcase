name: API Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [smoke, regression, contract]
    env:
      BASE_URL: http://localhost:8000
      API_TOKEN: secret-token

    services:
      api:
        image: ghcr.io/actions/hello-world:latest # placeholder to warm docker
        options: >-
          --health-cmd "echo ok"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build mock API
        run: |
          docker build -t mock-api ./apps/mock_api
          docker run -d --rm -p 8000:8000 --name mock-api                 -e REQUIRED_BEARER=secret-token                 mock-api uvicorn apps.mock_api.main:app --host 0.0.0.0 --port 8000
          sleep 3

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (${{ matrix.suite }})
        run: |
          pytest -m ${{ matrix.suite }} --alluredir=allure-results/${{ matrix.suite }}

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-${{ matrix.suite }}
          path: allure-results/${{ matrix.suite }}

  performance:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:8000
    steps:
      - uses: actions/checkout@v4
      - name: Build & run mock API
        run: |
          docker build -t mock-api ./apps/mock_api
          docker run -d --rm -p 8000:8000 --name mock-api mock-api                 uvicorn apps.mock_api.main:app --host 0.0.0.0 --port 8000
          sleep 3
      - name: Set up k6
        uses: grafana/setup-k6-action@v1
      - name: k6 smoke
        run: k6 run performance/smoke.js --env BASE_URL=http://localhost:8000

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build & run mock API
        run: |
          docker build -t mock-api ./apps/mock_api
          docker run -d --rm -p 8000:8000 --name mock-api mock-api                 uvicorn apps.mock_api.main:app --host 0.0.0.0 --port 8000
          sleep 3
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000/docs'
          cmd_options: '-a'
